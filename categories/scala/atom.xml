<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[Coder Consortium]]></title><link href="http://www.coderconsortium.com/categories/scala/atom.xml" rel="self"/><link href="http://www.coderconsortium.com/"/><updated>2014-12-04T13:31:33-08:00</updated><id>http://www.coderconsortium.com/</id><author><name><![CDATA[Steve Holmes]]></name></author><generator uri="http://sysgears.com/grain/">Grain</generator><entry><title type="html"><![CDATA[October 2nd Meetup: Tom Parker - Exploring JVM Concurrency]]></title><link href="http://www.coderconsortium.com/blog/2014/10/01/october-2nd-meetup-tom-parker-exploring-jvm-concurrency/"/><updated>2014-12-04T13:31:33-08:00</updated><id>/blog/2014/10/01/october-2nd-meetup-tom-parker-exploring-jvm-concurrency/</id><content type="html"><![CDATA[<p>Hey Consorters!</p>
<p>The Great Tom Parker will be giving a talk on exploring concurrency issues and options in java and JVM languages. How STM and actors can ease the pain. Code samples include Java, Clojure, Groovy, Scala, and maybe even jRuby.</p>
<p>Hope to see you all there!</p>
]]></content></entry><entry><title type="html"><![CDATA[July 3rd Meeting: Corey Minter - Parser Combinators in Scala]]></title><link href="http://www.coderconsortium.com/blog/2014/06/28/july-3rd-meeting-corey-minter-parser-combinators-in-scala/"/><updated>2014-12-04T13:31:33-08:00</updated><id>/blog/2014/06/28/july-3rd-meeting-corey-minter-parser-combinators-in-scala/</id><content type="html"><![CDATA[<p>Parser Combinators in Scala</p>
<p>Scala provides a library (and DSL) which allows easily adding this recursive descent parsing strategy directly in your application (no separate tools required).  You'll see how parser combinators differ from other parsing methods.  A code demo will show you how to implement a grammar then extend that into 'useful' actions.</p>
]]></content></entry></feed>